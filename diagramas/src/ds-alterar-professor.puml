@startuml Diagrama de Sequencia

participant Frontend as Frontend
participant "ProfessorRoute(route) : IRoutes" as Routes
participant "ProfessorController(professorController) : IProfessorController" as ProfessorController
participant "fone: Telefone" as Telefone
participant "TelefoneDAO(telefoneDAO) : ITelefoneDAO" as TelefoneDAO
participant "endereco: Endereco" as Endereco
participant "EnderecoDAO(enderecoDAO) : IEnderecoDAO" as EnderecoDAO
participant "professor: Professor" as Professor
participant "ProfessorDAO(professorDAO) : IProfessorDAO" as ProfessorDAO

autonumber 1.1
' Alterar professor
Frontend->Routes: res = put("api/professor/{id}", req): Professor
Routes->ProfessorController: res = alterar(req.body): Professor
ProfessorController->Professor: setId(req.id)
ProfessorController->Professor: setNome(req.nome)
ProfessorController->Professor: setSobrenome(req.sobrenome)
ProfessorController->Professor: setCpf(req.cpf)
ProfessorController->Professor: setSexo(req.sexo)
ProfessorController->Professor: setRaca(req.raca)
ProfessorController->Professor: setDataIngresso(req.dataIngresso)
ProfessorController->Professor: setDataNascimento(req.dataNascimento)
ProfessorController->Professor: setEndereco(req.endereco)
ProfessorController->Professor: setTelefone(req.telefone)
ProfessorController->Professor: setCurso(req.curso)
ProfessorController->ProfessorDAO: res = alterar(professor): Professor
ProfessorDAO->ProfessorController: res
ProfessorController->Routes: res
Routes->Frontend: res

' Deletar professor
autonumber inc A
Frontend->Routes: res = delete("api/professor/{id}", req): Professor
Routes->ProfessorController: res = remover(req.body.id): Professor
ProfessorController->ProfessorDAO: res = remover(id): Professor
ProfessorDAO->ProfessorController: res
ProfessorController->Routes: res
Routes->Frontend: res
