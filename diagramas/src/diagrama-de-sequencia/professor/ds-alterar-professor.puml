@startuml Diagrama de Sequencia

participant Frontend as Frontend
participant "ProfessorRoute(route) : IRoutes" as Routes
participant "ProfessorController(professorController) : IProfessorController" as ProfessorController
participant "fone: Telefone" as Telefone
participant "TelefoneDAO(telefoneDAO) : ITelefoneDAO" as TelefoneDAO
participant "endereco: Endereco" as Endereco
participant "EnderecoDAO(enderecoDAO) : IEnderecoDAO" as EnderecoDAO
participant "professor: Professor" as Professor
participant "ProfessorDAO(professorDAO) : IProfessorDAO" as ProfessorDAO

autonumber 1.1
' Armazenar telefone
Frontend->Routes: res = put("api/professor", req): Professor
Routes->ProfessorController: res = alterar(req.body): Professor
ProfessorController->Telefone: setCodPais(req.codPais)
ProfessorController->Telefone: setDdd(req.ddd)
ProfessorController->Telefone: setNumero(req.numero)
ProfessorController->TelefoneDAO: res = alterar(telefone): Telefone
TelefoneDAO->ProfessorController: res
ProfessorController->Routes: res
Routes->Frontend: res


' Armazenar endereÃ§o
autonumber inc A
ProfessorController->Endereco: setLogradouro(req.logradouro)
ProfessorController->Endereco: setNumero(req.numero)
ProfessorController->Endereco: setLocal(req.local)
ProfessorController->Endereco: setCep(req.cep)
ProfessorController->Endereco: setTipo(req.tipo)
ProfessorController->EnderecoDAO: res = alterar(endereco): Endereco
EnderecoDAO->ProfessorController: res
ProfessorController->Routes: res
Routes->Frontend: res

' Armazenar professor
autonumber inc A
ProfessorController->Professor: setNome(req.nome)
ProfessorController->Professor: setSobrenome(req.sobrenome)
ProfessorController->Professor: setCpf(req.cpf)
ProfessorController->Professor: setSexo(req.sexo)
ProfessorController->Professor: setRaca(req.raca)
ProfessorController->Professor: setDataIngresso(req.dataIngresso)
ProfessorController->Professor: setDataNascimento(req.dataNascimento)
ProfessorController->Professor: setEndereco(req.endereco)
ProfessorController->Professor: setTelefone(req.telefone)
ProfessorController->Professor: setCurso(req.curso)
ProfessorController->ProfessorDAO: res = alterar(professor): Professor
ProfessorDAO->ProfessorController: res
ProfessorController->Routes: res
Routes->Frontend: res
