@startuml trabalho_engenharia_persistence

package "persistence" {
    class Pessoa {
        - idPessoa: int
        - nome: String
        - sobrenome: String
        - cpf: String
        - endereco: Endereco
        - telefone: List<Telefone>
        - sexo: String
        - raca: String

        + getIdPessoa(): int
        + setIdPessoa(id: int): boolean
        + getNome(): String
        + setNome(nome: String): boolean
        + getSobrenome(): String
        + setSobrenome(sobrenome: String): boolean
        + getCpf(): String
        + setCpf(cpf: String): boolean
        + getEndereco(): Endereco
        + setEndereco(endereco: Endereco): boolean
        + getTelefones(): List<Telefone>
        + setTelefones(telefones: List<Telefone>): boolean
        + getSexo(): String
        + setSexo(sexo: String): boolean
        + getRaca(): String
        + setRaca(raca: String): boolean
    }

    Pessoa <|-- Aluno
    Aluno --o Curso
    class Aluno {
        - dataIngresso: Date

        + getDataIngresso(): Date
        + setDataIngresso(data: Date): boolean
    }

    Pessoa <|-- Professor
    Professor --o Curso
    class Professor {
        - dataContratacao: Date
        - departamento: String
        - salario: float

        + getSalario(): float
        + setSalario(salario: float): boolean
        + getDepartamento(): String
        + setDepartamento(departamento: String): boolean
        + getDataContratacao(): Date
        + setDataContratacao(data: Date): boolean
    }

    Pessoa o-- Endereco
    class Endereco {
        - idEndereco: int
        - logradouro: String
        - local: String
        - numero: int
        - cep: String
        - tipo: String

        + getIdEndereco(): int
        + setIdEndereco(id: int): boolean
        + getLogradouro(): String
        + setLogradouro(logradouro: String): boolean
        + getLocal(): String
        + setLocal(local: String): boolean
        + getNumero(): int
        + setNumero(numero: int): boolean
        + getCep(): String
        + setCep(cep: String): boolean
        + getTipo(): String
        + setTipo(tipo: String): boolean
    }

    Pessoa o-- Telefone
    class Telefone {
        - idTelefone: int
        - cod_pais: int
        - ddd: String
        - numTelefone

        + getIdTelefone(): int
        + setIdTelefone(id: int): boolean
        + getCodPais(): int
        + setCodPais(codPais: int): boolean
        + getDdd(): String
        + setDdd(ddd: String): boolean
        + getNumTelefone(): String
        + setNumTelefone(numTelefone: String): boolean
    }
    class Curso{
        - idCurso: int
        - nome: String
        - campus: String

        + getIdCurso() : int
        + setIdCurso(id: int): boolean
        + getNomeCurso(): String
        + setNomeCurso(nome: String): boolean
        + getCampus(): String
        + setCampus(campus: String): boolean

    }

    Disciplina --o Curso
    class Disciplina {
        - idDisciplina: int
        - nome: String
        - descricao: String
        - horario: Horario
        - preRequisito: List < Disciplina >

        + getIdDisciplina(): int
        + setIdDisciplina(id: int): boolean
        + getNome(): String
        + setNome(nome: String): boolean
        + getDescricao(): String
        + setDescricao(descricao: String): boolean
        + getHorario(): Horario
        + getPreRequisito(): List<Disciplina>
        + setPreRequisito(preRequisito: List<Disciplina>): boolean
    }

    Horario o-- Periodo
    class Horario {
        - idHorario: int
        - periodo: Periodo
        - dia: String
        - horaInicial: String
        - horaFinal: String

        + getIdHorario(): int
        + setIdHorario(id: int): boolean
        + getIdPeriodo(): int
        + setIdPeriodo(id: int): boolean
        + getDia(): String
        + setDia(dia: String): boolean
        + getHoraInicial(): String
        + setHoraInicial(horaInicial: String): boolean
        + getHoraFinal(): String
        + setHoraFinal(horaFinal: String): boolean
    }
    
    Sala o-- Equipamento
    class Sala {
        - idSala: int
        - predio: String
        - sala: String
        - capacidade: int
        - equipamentos: List < Equipamento >

        + getIdSala(): int
        + setIdSala(id: int): boolean
        + getPredio(): String
        + setPredio(predio: String): boolean
        + getSala(): String
        + setSala(sala: String): boolean
        + getCapacidade(): int
        + setCapacidade(capacidade: int): boolean
        + getEquipamentos(): List
        + addEquipamento(equipamento: Equipamento): boolean
    }

    class ModeloEquipamento {
        - idModelo: int
        - nome: String
        - marca String

        + getIdModelo(): int
        + setIdModelo(id: int): boolean
        + getNome(): String
        + setNome(nome: String): boolean
        + getMarca(): String
        + setMarca(marca: String): boolean
    }

    ModeloEquipamento <|-- Equipamento
    class Equipamento {
        - idEquipamento: int
        - estado: enum
        - data_aquisicao: Date
        
        + getIdEquipamento(): int
        + setIdEquipamento(id: int): boolean
        + getIdModelo(): int
        + setIdModelo(id: int): boolean
        + getIdSala(): int
        + setIdSala(id: int): boolean
        + getDataAquisicao(): Date
        + setDataAquisicao(data: Date): boolean
    }

    
}

@enduml
